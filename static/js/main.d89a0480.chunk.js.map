{"version":3,"sources":["Cepdb.tsx","images/lookingCep.svg","images/cep.svg","images/warning.svg","App.tsx","index.tsx"],"names":["basicFetch","endpoint","fetch","req","json","Cepdb","GetCep","cep","App","useState","status","ok","message","code","state","city","district","address","statusText","dataCep","setDataCep","numberCep","setNumberCep","a","erro","document","querySelector","image","info","length","innerHTML","list","setAttribute","warningImg","classList","remove","cepImg","add","className","htmlFor","id","name","placeholder","maxLength","minLength","onChange","e","target","value","onClick","src","lookinCepImg","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"uMAEMA,G,MAAU,uCAAG,WAAOC,GAAgB,yFACtBC,MAAM,GAAD,OAHR,6BAGoB,OAAGD,IAAY,KAAD,EAAxC,OAAHE,EAAG,gBACUA,EAAIC,OAAO,KAAD,EAAnB,OAAJA,EAAI,yBACHA,GAAI,2CACZ,gBAJe,uCAMVC,EAAQ,CACZC,OAAO,WAAD,4BAAE,WAAOC,GAAW,iFACXP,EAAW,IAAD,OAAKO,EAAG,UAAS,KAAD,8EACxC,mDAFM,IAKMF,ICdA,MAA0B,uCCA1B,MAA0B,gCCA1B,MAA0B,oC,OC0F1BG,MAvEf,WACE,MAA8BC,mBAAc,CAC1CC,OAAQ,EACRC,IAAI,EACJC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,WAAY,KACZ,mBAVKC,EAAO,KAAEC,EAAU,KAW1B,EAAkCX,mBAAiB,IAAG,mBAA/CY,EAAS,KAAEC,EAAY,KAEN,aAuBvB,OAvBuB,wBAAxB,oCAAAC,EAAA,sDAI+C,GAHvCC,EAAOC,SAASC,cAAc,UAC9Bd,EAAUa,SAASC,cAAc,YACjCC,EAAQF,SAASC,cAAc,OAC/BE,EAAOH,SAASC,cAAc,UAEZ,IAArBL,EAAUQ,OAAY,gBACvBL,EAAKM,UAAY,eAAe,wCAERzB,EAAMC,OAAOe,GAAU,QAE5B,OAFbU,EAAS,QAEPrB,QACNE,EAAQkB,UAAS,qCAAiCC,EAAKnB,SACvDe,EAAMK,aAAa,MAAM,GAAD,OAAKC,IAC7BL,EAAKM,UAAUC,OAAO,YAEtBf,EAAWW,GACXnB,EAAQkB,UAAY,GACpBH,EAAMK,aAAa,MAAM,GAAD,OAAKI,IAC7BR,EAAKM,UAAUG,IAAI,WAErBb,EAAKM,UAAY,GAAE,6CAEtB,sBAED,OACE,0BAASQ,UAAU,YAAW,UAC5B,sBAAKA,UAAU,OAAM,UACnB,uBAAOC,QAAQ,MAAK,6BACpB,uBACEC,GAAG,MAAMC,KAAK,MACdC,YAAY,MACZC,UAAW,EAAGC,UAAW,EACzBC,SAAU,SAAAC,GAAC,OAAIxB,EAAawB,EAAEC,OAAOC,UAEvC,uBAAOV,UAAU,UACjB,wBAAQW,QAtCyC,WAE5B,OAAH,yBAoCS,0BAE7B,sBAAKX,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,YAAW,UACxB,mBAAGA,UAAU,YACb,sBAAKA,UAAU,QAAO,UACpB,sCAAQ,iCAASnB,EAAQN,UACzB,8CAAa,iCAASM,EAAQF,aAC9B,yCAAW,iCAASE,EAAQH,cAC5B,yCAAW,iCAASG,EAAQJ,UAC5B,yCAAW,iCAASI,EAAQL,iBAGhC,qBAAKwB,UAAU,QAAO,SACpB,qBAAKY,IAAKC,EAAcC,IAAI,+CC/EtCC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAEN9B,SAAS+B,eAAe,W","file":"static/js/main.d89a0480.chunk.js","sourcesContent":["const BASE_URL = 'https://ws.apicep.com/cep';\r\n\r\nconst basicFetch = async (endpoint: string) => {\r\n  const req = await fetch(`${BASE_URL}${endpoint}`);\r\n  const json = await req.json();\r\n  return json;\r\n}\r\n\r\nconst Cepdb = {\r\n  GetCep: async (cep: string) => {\r\n    return await basicFetch(`/${cep}.json`);\r\n  }\r\n}\r\n\r\nexport default Cepdb","export default __webpack_public_path__ + \"static/media/lookingCep.4832f1c5.svg\";","export default __webpack_public_path__ + \"static/media/cep.cebbc2d0.svg\";","export default __webpack_public_path__ + \"static/media/warning.4ce18fbb.svg\";","import { useState } from 'react';\nimport './App.css';\nimport Cepdb from './Cepdb';\nimport lookinCepImg from './images/lookingCep.svg';\nimport cepImg from './images/cep.svg';\nimport warningImg from './images/warning.svg';\n\ninterface Cep {\n  status: number;\n  ok: Boolean;\n  message: string;\n  code: string;\n  state: string;\n  city: string;\n  district: string;\n  address: string;\n  statusText: string\n}\n\nfunction App() {\n  const [dataCep, setDataCep] = useState<Cep>({\n    status: 0,\n    ok: false,\n    message: '',\n    code: '',\n    state: '',\n    city: '',\n    district: '',\n    address: '',\n    statusText: '',\n  });\n  const [numberCep, setNumberCep] = useState<string>('');\n\n  async function pesquisar(){\n    const erro = document.querySelector('.error') as HTMLElement;\n    const message = document.querySelector('.message') as HTMLElement;\n    const image = document.querySelector('img') as HTMLElement;\n    const info = document.querySelector('.infos') as HTMLElement;\n\n    if(numberCep.length === 0){\n      erro.innerHTML = 'Digite o CEP';\n    }else {\n      const list: Cep = await Cepdb.GetCep(numberCep)\n\n      if(list.status !== 200) {\n        message.innerHTML = `Desculpe, algo deu errado: ${list.message}`;\n        image.setAttribute('src', `${warningImg}`)\n        info.classList.remove('active');\n      }else {\n        setDataCep(list)\n        message.innerHTML = ''\n        image.setAttribute('src', `${cepImg}`);\n        info.classList.add('active');\n      }\n      erro.innerHTML = ''\n    }\n  }\n  \n  return (\n    <section className=\"container\">\n      <div className=\"form\">\n        <label htmlFor=\"cep\">Informe o CEP: </label>\n        <input \n          id=\"cep\" name=\"cep\" \n          placeholder=\"CEP\" \n          maxLength={9} minLength={8} \n          onChange={e => setNumberCep(e.target.value)} \n        />\n        <small className=\"error\"></small>\n        <button onClick={pesquisar}>Pesquisar</button>\n      </div>\n      <div className=\"infos-container\">\n        <div className=\"infos-cep\">\n          <p className=\"message\"></p>\n          <div className=\"infos\">\n            <p>CEP: <strong>{dataCep.code}</strong></p>\n            <p>Endere√ßo: <strong>{dataCep.address}</strong></p>\n            <p>Bairro: <strong>{dataCep.district}</strong></p>\n            <p>Cidade: <strong>{dataCep.city}</strong></p>\n            <p>Estado: <strong>{dataCep.state}</strong></p>\n          </div>\n        </div>\n        <div className=\"image\">\n          <img src={lookinCepImg} alt=\"Imagem de uma mulher com uma lupa\" />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}